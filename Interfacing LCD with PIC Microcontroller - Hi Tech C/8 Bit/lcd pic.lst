

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Thu Mar 20 14:37:01 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_Lcd8_Init
    43                           	FNCALL	_main,_Lcd8_Set_Cursor
    44                           	FNCALL	_main,_Lcd8_Write_String
    45                           	FNCALL	_main,_Lcd8_Shift_Left
    46                           	FNCALL	_main,_Lcd8_Shift_Right
    47                           	FNCALL	_main,_Lcd8_Clear
    48                           	FNCALL	_main,_Lcd8_Write_Char
    49                           	FNCALL	_Lcd8_Shift_Left,_Lcd8_Cmd
    50                           	FNCALL	_Lcd8_Shift_Right,_Lcd8_Cmd
    51                           	FNCALL	_Lcd8_Write_String,_Lcd8_Write_Char
    52                           	FNCALL	_Lcd8_Init,_Lcd8_Port
    53                           	FNCALL	_Lcd8_Init,_Lcd8_Cmd
    54                           	FNCALL	_Lcd8_Set_Cursor,_Lcd8_Cmd
    55                           	FNCALL	_Lcd8_Clear,_Lcd8_Cmd
    56                           	FNCALL	_Lcd8_Write_Char,_Lcd8_Port
    57                           	FNCALL	_Lcd8_Cmd,_Lcd8_Port
    58                           	FNROOT	_main
    59                           	global	_RB6
    60                           psect	text139,local,class=CODE,delta=2
    61                           global __ptext139
    62  0000                     __ptext139:
    63  0036                     _RB6	set	54
    64                           	global	_RB7
    65  0037                     _RB7	set	55
    66                           	global	_RC0
    67  0038                     _RC0	set	56
    68                           	global	_RC1
    69  0039                     _RC1	set	57
    70                           	global	_RC2
    71  003A                     _RC2	set	58
    72                           	global	_RC3
    73  003B                     _RC3	set	59
    74                           	global	_RC4
    75  003C                     _RC4	set	60
    76                           	global	_RC5
    77  003D                     _RC5	set	61
    78                           	global	_RC6
    79  003E                     _RC6	set	62
    80                           	global	_RC7
    81  003F                     _RC7	set	63
    82                           	global	_TRISB
    83  0086                     _TRISB	set	134
    84                           	global	_TRISC
    85  0087                     _TRISC	set	135
    86                           psect	strings,class=STRING,delta=2
    87                           global __pstrings
    88  0003                     __pstrings:
    89                           ;	global	stringdir,stringtab,__stringbase
    90  0003                     stringtab:
    91                           ;	String table - string pointers are 1 byte each
    92  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
    93  0003  3000               movlw high(stringdir)
    94  0004  008A               movwf pclath
    95  0005  0804               movf fsr,w
    96  0006  0A84               incf fsr
    97  0007  0782               	addwf pc
    98  0008                     __stringbase:
    99  0008  3400               	retlw	0
   100                           psect	strings
   101                           	
   102  0009                     STR_1:	
   103  0009  3465               	retlw	101	;'e'
   104  000A  346C               	retlw	108	;'l'
   105  000B  3465               	retlw	101	;'e'
   106  000C  3463               	retlw	99	;'c'
   107  000D  3474               	retlw	116	;'t'
   108  000E  3472               	retlw	114	;'r'
   109  000F  346F               	retlw	111	;'o'
   110  0010  3453               	retlw	83	;'S'
   111  0011  346F               	retlw	111	;'o'
   112  0012  346D               	retlw	109	;'m'
   113  0013  3465               	retlw	101	;'e'
   114  0014  3420               	retlw	32	;' '
   115  0015  344C               	retlw	76	;'L'
   116  0016  3443               	retlw	67	;'C'
   117  0017  3444               	retlw	68	;'D'
   118  0018  3420               	retlw	32	;' '
   119  0019  3448               	retlw	72	;'H'
   120  001A  3465               	retlw	101	;'e'
   121  001B  346C               	retlw	108	;'l'
   122  001C  346C               	retlw	108	;'l'
   123  001D  346F               	retlw	111	;'o'
   124  001E  3420               	retlw	32	;' '
   125  001F  3457               	retlw	87	;'W'
   126  0020  346F               	retlw	111	;'o'
   127  0021  3472               	retlw	114	;'r'
   128  0022  346C               	retlw	108	;'l'
   129  0023  3464               	retlw	100	;'d'
   130  0024  3400               	retlw	0
   131                           psect	strings
   132                           	file	"lcd pic.as"
   133                           	line	#
   134                           psect cinit,class=CODE,delta=2
   135                           global start_initialization
   136  062F                     start_initialization:
   137                           
   138                           psect cinit,class=CODE,delta=2
   139                           global end_of_initialization
   140                           
   141                           ;End of C runtime variable initialization code
   142                           
   143  062F                     end_of_initialization:
   144  062F  0183               clrf status
   145  0630  120A  118A  2F4F   ljmp _main	;jump to C main() function
   146                           psect	cstackCOMMON,class=COMMON,space=1
   147                           global __pcstackCOMMON
   148  0070                     __pcstackCOMMON:
   149                           	global	?_Lcd8_Port
   150  0070                     ?_Lcd8_Port:	; 0 bytes @ 0x0
   151                           	global	??_Lcd8_Port
   152  0070                     ??_Lcd8_Port:	; 0 bytes @ 0x0
   153                           	global	?_Lcd8_Cmd
   154  0070                     ?_Lcd8_Cmd:	; 0 bytes @ 0x0
   155                           	global	?_Lcd8_Init
   156  0070                     ?_Lcd8_Init:	; 0 bytes @ 0x0
   157                           	global	?_Lcd8_Write_Char
   158  0070                     ?_Lcd8_Write_Char:	; 0 bytes @ 0x0
   159                           	global	?_Lcd8_Write_String
   160  0070                     ?_Lcd8_Write_String:	; 0 bytes @ 0x0
   161                           	global	?_Lcd8_Shift_Right
   162  0070                     ?_Lcd8_Shift_Right:	; 0 bytes @ 0x0
   163                           	global	?_Lcd8_Shift_Left
   164  0070                     ?_Lcd8_Shift_Left:	; 0 bytes @ 0x0
   165                           	global	?_main
   166  0070                     ?_main:	; 0 bytes @ 0x0
   167                           	global	?_Lcd8_Clear
   168  0070                     ?_Lcd8_Clear:	; 2 bytes @ 0x0
   169                           	global	Lcd8_Port@a
   170  0070                     Lcd8_Port@a:	; 1 bytes @ 0x0
   171  0070                     	ds	1
   172                           	global	??_Lcd8_Cmd
   173  0071                     ??_Lcd8_Cmd:	; 0 bytes @ 0x1
   174                           	global	??_Lcd8_Write_Char
   175  0071                     ??_Lcd8_Write_Char:	; 0 bytes @ 0x1
   176  0071                     	ds	2
   177                           	global	Lcd8_Cmd@a
   178  0073                     Lcd8_Cmd@a:	; 1 bytes @ 0x3
   179                           	global	Lcd8_Write_Char@a
   180  0073                     Lcd8_Write_Char@a:	; 1 bytes @ 0x3
   181  0073                     	ds	1
   182                           	global	??_Lcd8_Clear
   183  0074                     ??_Lcd8_Clear:	; 0 bytes @ 0x4
   184                           	global	?_Lcd8_Set_Cursor
   185  0074                     ?_Lcd8_Set_Cursor:	; 0 bytes @ 0x4
   186                           	global	??_Lcd8_Init
   187  0074                     ??_Lcd8_Init:	; 0 bytes @ 0x4
   188                           	global	??_Lcd8_Write_String
   189  0074                     ??_Lcd8_Write_String:	; 0 bytes @ 0x4
   190                           	global	??_Lcd8_Shift_Right
   191  0074                     ??_Lcd8_Shift_Right:	; 0 bytes @ 0x4
   192                           	global	??_Lcd8_Shift_Left
   193  0074                     ??_Lcd8_Shift_Left:	; 0 bytes @ 0x4
   194                           	global	Lcd8_Set_Cursor@b
   195  0074                     Lcd8_Set_Cursor@b:	; 1 bytes @ 0x4
   196                           	global	Lcd8_Write_String@i
   197  0074                     Lcd8_Write_String@i:	; 2 bytes @ 0x4
   198  0074                     	ds	1
   199                           	global	??_Lcd8_Set_Cursor
   200  0075                     ??_Lcd8_Set_Cursor:	; 0 bytes @ 0x5
   201                           	global	Lcd8_Set_Cursor@a
   202  0075                     Lcd8_Set_Cursor@a:	; 1 bytes @ 0x5
   203  0075                     	ds	1
   204                           	global	Lcd8_Write_String@a
   205  0076                     Lcd8_Write_String@a:	; 1 bytes @ 0x6
   206  0076                     	ds	1
   207                           	global	??_main
   208  0077                     ??_main:	; 0 bytes @ 0x7
   209  0077                     	ds	3
   210                           	global	main@i
   211  007A                     main@i:	; 2 bytes @ 0xA
   212  007A                     	ds	2
   213 ;;Data sizes: Strings 28, constant 0, data 0, bss 0, persistent 0 stack 0
   214 ;;Auto spaces:   Size  Autos    Used
   215 ;; COMMON          14     12      12
   216 ;; BANK0           80      0       0
   217 ;; BANK1           80      0       0
   218 ;; BANK3           96      0       0
   219 ;; BANK2           96      0       0
   220                           
   221 ;;
   222 ;; Pointer list with targets:
   223                           
   224 ;; Lcd8_Write_String@a	PTR unsigned char  size(1) Largest target is 28
   225 ;;		 -> STR_1(CODE[28]), 
   226 ;;
   227                           
   228                           
   229 ;;
   230 ;; Critical Paths under _main in COMMON
   231 ;;
   232 ;;   _main->_Lcd8_Write_String
   233 ;;   _Lcd8_Shift_Left->_Lcd8_Cmd
   234 ;;   _Lcd8_Shift_Right->_Lcd8_Cmd
   235 ;;   _Lcd8_Write_String->_Lcd8_Write_Char
   236 ;;   _Lcd8_Init->_Lcd8_Cmd
   237 ;;   _Lcd8_Set_Cursor->_Lcd8_Cmd
   238 ;;   _Lcd8_Clear->_Lcd8_Cmd
   239 ;;   _Lcd8_Write_Char->_Lcd8_Port
   240 ;;   _Lcd8_Cmd->_Lcd8_Port
   241 ;;
   242 ;; Critical Paths under _main in BANK0
   243 ;;
   244 ;;   None.
   245 ;;
   246 ;; Critical Paths under _main in BANK1
   247 ;;
   248 ;;   None.
   249 ;;
   250 ;; Critical Paths under _main in BANK3
   251 ;;
   252 ;;   None.
   253 ;;
   254 ;; Critical Paths under _main in BANK2
   255 ;;
   256 ;;   None.
   257                           
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   260 ;;
   261                           
   262 ;;
   263 ;;Call Graph Tables:
   264 ;;
   265 ;; ---------------------------------------------------------------------------------
   266 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   267 ;; ---------------------------------------------------------------------------------
   268 ;; (0) _main                                                 5     5      0    1245
   269 ;;                                              7 COMMON     5     5      0
   270 ;;                          _Lcd8_Init
   271 ;;                    _Lcd8_Set_Cursor
   272 ;;                  _Lcd8_Write_String
   273 ;;                    _Lcd8_Shift_Left
   274 ;;                   _Lcd8_Shift_Right
   275 ;;                         _Lcd8_Clear
   276 ;;                    _Lcd8_Write_Char
   277 ;; ---------------------------------------------------------------------------------
   278 ;; (1) _Lcd8_Shift_Left                                      0     0      0     135
   279 ;;                           _Lcd8_Cmd
   280 ;; ---------------------------------------------------------------------------------
   281 ;; (1) _Lcd8_Shift_Right                                     0     0      0     135
   282 ;;                           _Lcd8_Cmd
   283 ;; ---------------------------------------------------------------------------------
   284 ;; (1) _Lcd8_Write_String                                    3     3      0     195
   285 ;;                                              4 COMMON     3     3      0
   286 ;;                    _Lcd8_Write_Char
   287 ;; ---------------------------------------------------------------------------------
   288 ;; (1) _Lcd8_Init                                            2     2      0     255
   289 ;;                                              4 COMMON     2     2      0
   290 ;;                          _Lcd8_Port
   291 ;;                           _Lcd8_Cmd
   292 ;; ---------------------------------------------------------------------------------
   293 ;; (1) _Lcd8_Set_Cursor                                      2     1      1     195
   294 ;;                                              4 COMMON     2     1      1
   295 ;;                           _Lcd8_Cmd
   296 ;; ---------------------------------------------------------------------------------
   297 ;; (1) _Lcd8_Clear                                           0     0      0     135
   298 ;;                           _Lcd8_Cmd
   299 ;; ---------------------------------------------------------------------------------
   300 ;; (1) _Lcd8_Write_Char                                      3     3      0     135
   301 ;;                                              1 COMMON     3     3      0
   302 ;;                          _Lcd8_Port
   303 ;; ---------------------------------------------------------------------------------
   304 ;; (2) _Lcd8_Cmd                                             3     3      0     135
   305 ;;                                              1 COMMON     3     3      0
   306 ;;                          _Lcd8_Port
   307 ;; ---------------------------------------------------------------------------------
   308 ;; (2) _Lcd8_Port                                            1     1      0     120
   309 ;;                                              0 COMMON     1     1      0
   310 ;; ---------------------------------------------------------------------------------
   311 ;; Estimated maximum stack depth 2
   312 ;; ---------------------------------------------------------------------------------
   313                           
   314 ;; Call Graph Graphs:
   315                           
   316 ;; _main (ROOT)
   317 ;;   _Lcd8_Init
   318 ;;     _Lcd8_Port
   319 ;;     _Lcd8_Cmd
   320 ;;       _Lcd8_Port
   321 ;;   _Lcd8_Set_Cursor
   322 ;;     _Lcd8_Cmd
   323 ;;       _Lcd8_Port
   324 ;;   _Lcd8_Write_String
   325 ;;     _Lcd8_Write_Char
   326 ;;       _Lcd8_Port
   327 ;;   _Lcd8_Shift_Left
   328 ;;     _Lcd8_Cmd
   329 ;;       _Lcd8_Port
   330 ;;   _Lcd8_Shift_Right
   331 ;;     _Lcd8_Cmd
   332 ;;       _Lcd8_Port
   333 ;;   _Lcd8_Clear
   334 ;;     _Lcd8_Cmd
   335 ;;       _Lcd8_Port
   336 ;;   _Lcd8_Write_Char
   337 ;;     _Lcd8_Port
   338 ;;
   339                           
   340 ;; Address spaces:
   341                           
   342 ;;Name               Size   Autos  Total    Cost      Usage
   343 ;;BITCOMMON            E      0       0       0        0.0%
   344 ;;EEDATA             100      0       0       0        0.0%
   345 ;;NULL                 0      0       0       0        0.0%
   346 ;;CODE                 0      0       0       0        0.0%
   347 ;;COMMON               E      C       C       1       85.7%
   348 ;;BITSFR0              0      0       0       1        0.0%
   349 ;;SFR0                 0      0       0       1        0.0%
   350 ;;BITSFR1              0      0       0       2        0.0%
   351 ;;SFR1                 0      0       0       2        0.0%
   352 ;;STACK                0      0       3       2        0.0%
   353 ;;ABS                  0      0       0       3        0.0%
   354 ;;BITBANK0            50      0       0       4        0.0%
   355 ;;BITSFR3              0      0       0       4        0.0%
   356 ;;SFR3                 0      0       0       4        0.0%
   357 ;;BANK0               50      0       0       5        0.0%
   358 ;;BITSFR2              0      0       0       5        0.0%
   359 ;;SFR2                 0      0       0       5        0.0%
   360 ;;BITBANK1            50      0       0       6        0.0%
   361 ;;BANK1               50      0       0       7        0.0%
   362 ;;BITBANK3            60      0       0       8        0.0%
   363 ;;BANK3               60      0       0       9        0.0%
   364 ;;BITBANK2            60      0       0      10        0.0%
   365 ;;BANK2               60      0       0      11        0.0%
   366 ;;DATA                 0      0       0      12        0.0%
   367                           
   368                           	global	_main
   369                           psect	maintext,global,class=CODE,delta=2
   370                           global __pmaintext
   371  074F                     __pmaintext:
   372                           
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 21 in file "G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Microcontroller - Hi 
       Tech C\8 Bit\code.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;  i               2   10[COMMON] int 
   380 ;; Return value:  Size  Location     Type
   381 ;;		None               void
   382 ;; Registers used:
   383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : 17F/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         0       0       0       0       0
   390 ;;      Locals:         2       0       0       0       0
   391 ;;      Temps:          3       0       0       0       0
   392 ;;      Totals:         5       0       0       0       0
   393 ;;Total ram usage:        5 bytes
   394 ;; Hardware stack levels required when called:    3
   395 ;; This function calls:
   396 ;;		_Lcd8_Init
   397 ;;		_Lcd8_Set_Cursor
   398 ;;		_Lcd8_Write_String
   399 ;;		_Lcd8_Shift_Left
   400 ;;		_Lcd8_Shift_Right
   401 ;;		_Lcd8_Clear
   402 ;;		_Lcd8_Write_Char
   403 ;; This function is called by:
   404 ;;		Startup code after reset
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           psect	maintext
   408                           	file	"G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Mic
                                 rocontroller - Hi Tech C\8 Bit\code.c"
   409                           	line	21
   410                           	global	__size_of_main
   411  00B1                     	__size_of_main	equ	__end_of_main-_main
   412                           	
   413  074F                     _main:	
   414                           	opt	stack 5
   415                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   416                           	line	23
   417                           	
   418  074F                     l2075:	
   419                           ;code.c: 22: int i;
   420                           ;code.c: 23: TRISB = 0x00;
   421  074F  1683               	bsf	status, 5	;RP0=1, select bank1
   422  0750  1303               	bcf	status, 6	;RP1=0, select bank1
   423  0751  0186               	clrf	(134)^080h	;volatile
   424                           	line	24
   425                           ;code.c: 24: TRISC = 0x00;
   426  0752  0187               	clrf	(135)^080h	;volatile
   427                           	line	25
   428                           	
   429  0753                     l2077:	
   430                           ;code.c: 25: Lcd8_Init();
   431  0753  120A  118A  2701   	fcall	_Lcd8_Init
              120A  118A         
   432  0758  2F59               	goto	l2079
   433                           	line	26
   434                           ;code.c: 26: while(1)
   435                           	
   436  0759                     l777:	
   437                           	line	28
   438                           	
   439  0759                     l2079:	
   440                           ;code.c: 27: {
   441                           ;code.c: 28: Lcd8_Set_Cursor(1,1);
   442  0759  01F4               	clrf	(?_Lcd8_Set_Cursor)
   443  075A  1403               	bsf	status,0
   444  075B  0DF4               	rlf	(?_Lcd8_Set_Cursor),f
   445  075C  3001               	movlw	(01h)
   446  075D  120A  118A  267C   	fcall	_Lcd8_Set_Cursor
              120A  118A         
   447                           	line	29
   448                           	
   449  0762                     l2081:	
   450                           ;code.c: 29: Lcd8_Write_String("electroSome LCD Hello World");
   451  0762  3001               	movlw	((STR_1-__stringbase))&0ffh
   452  0763  120A  118A  269B   	fcall	_Lcd8_Write_String
              120A  118A         
   453                           	line	30
   454                           	
   455  0768                     l2083:	
   456                           ;code.c: 30: for(i=0;i<15;i++)
   457  0768  01FA               	clrf	(main@i)
   458  0769  01FB               	clrf	(main@i+1)
   459                           	
   460  076A                     l2085:	
   461  076A  087B               	movf	(main@i+1),w
   462  076B  3A80               	xorlw	80h
   463  076C  00FF               	movwf	btemp+1
   464  076D  3080               	movlw	(high(0Fh))^80h
   465  076E  027F               	subwf	btemp+1,w
   466  076F  1D03               	skipz
   467  0770  2F73               	goto	u2355
   468  0771  300F               	movlw	low(0Fh)
   469  0772  027A               	subwf	(main@i),w
   470  0773                     u2355:
   471                           
   472  0773  1C03               	skipc
   473  0774  2F76               	goto	u2351
   474  0775  2F77               	goto	u2350
   475  0776                     u2351:
   476  0776  2F79               	goto	l2089
   477  0777                     u2350:
   478  0777  2F9E               	goto	l2097
   479                           	
   480  0778                     l2087:	
   481  0778  2F9E               	goto	l2097
   482                           	line	31
   483                           	
   484  0779                     l778:	
   485                           	line	32
   486                           	
   487  0779                     l2089:	
   488                           ;code.c: 31: {
   489                           ;code.c: 32: _delay((unsigned long)((100)*(8000000/4000.0)));
   490                           	opt asmopt_off
   491  0779  3002               movlw  2
   492  077A  00F9               movwf	((??_main+0)+0+2),f
   493  077B  3003               movlw	3
   494  077C  00F8               movwf	((??_main+0)+0+1),f
   495  077D  30BA               	movlw	186
   496  077E  00F7               movwf	((??_main+0)+0),f
   497  077F                     u2397:
   498  077F  0BF7               	decfsz	((??_main+0)+0),f
   499  0780  2F7F               	goto	u2397
   500  0781  0BF8               	decfsz	((??_main+0)+0+1),f
   501  0782  2F7F               	goto	u2397
   502  0783  0BF9               	decfsz	((??_main+0)+0+2),f
   503  0784  2F7F               	goto	u2397
   504                           opt asmopt_on
   505                           
   506                           	line	33
   507                           	
   508  0785                     l2091:	
   509                           ;code.c: 33: Lcd8_Shift_Left();
   510  0785  120A  118A  2641   	fcall	_Lcd8_Shift_Left
              120A  118A         
   511                           	line	30
   512                           	
   513  078A                     l2093:	
   514  078A  3001               	movlw	low(01h)
   515  078B  07FA               	addwf	(main@i),f
   516  078C  1803               	skipnc
   517  078D  0AFB               	incf	(main@i+1),f
   518  078E  3000               	movlw	high(01h)
   519  078F  07FB               	addwf	(main@i+1),f
   520                           	
   521  0790                     l2095:	
   522  0790  087B               	movf	(main@i+1),w
   523  0791  3A80               	xorlw	80h
   524  0792  00FF               	movwf	btemp+1
   525  0793  3080               	movlw	(high(0Fh))^80h
   526  0794  027F               	subwf	btemp+1,w
   527  0795  1D03               	skipz
   528  0796  2F99               	goto	u2365
   529  0797  300F               	movlw	low(0Fh)
   530  0798  027A               	subwf	(main@i),w
   531  0799                     u2365:
   532                           
   533  0799  1C03               	skipc
   534  079A  2F9C               	goto	u2361
   535  079B  2F9D               	goto	u2360
   536  079C                     u2361:
   537  079C  2F79               	goto	l2089
   538  079D                     u2360:
   539  079D  2F9E               	goto	l2097
   540                           	
   541  079E                     l779:	
   542                           	line	35
   543                           	
   544  079E                     l2097:	
   545                           ;code.c: 34: }
   546                           ;code.c: 35: for(i=0;i<15;i++)
   547  079E  01FA               	clrf	(main@i)
   548  079F  01FB               	clrf	(main@i+1)
   549                           	
   550  07A0                     l2099:	
   551  07A0  087B               	movf	(main@i+1),w
   552  07A1  3A80               	xorlw	80h
   553  07A2  00FF               	movwf	btemp+1
   554  07A3  3080               	movlw	(high(0Fh))^80h
   555  07A4  027F               	subwf	btemp+1,w
   556  07A5  1D03               	skipz
   557  07A6  2FA9               	goto	u2375
   558  07A7  300F               	movlw	low(0Fh)
   559  07A8  027A               	subwf	(main@i),w
   560  07A9                     u2375:
   561                           
   562  07A9  1C03               	skipc
   563  07AA  2FAC               	goto	u2371
   564  07AB  2FAD               	goto	u2370
   565  07AC                     u2371:
   566  07AC  2FAF               	goto	l2103
   567  07AD                     u2370:
   568  07AD  2FD4               	goto	l2111
   569                           	
   570  07AE                     l2101:	
   571  07AE  2FD4               	goto	l2111
   572                           	line	36
   573                           	
   574  07AF                     l780:	
   575                           	line	37
   576                           	
   577  07AF                     l2103:	
   578                           ;code.c: 36: {
   579                           ;code.c: 37: _delay((unsigned long)((100)*(8000000/4000.0)));
   580                           	opt asmopt_off
   581  07AF  3002               movlw  2
   582  07B0  00F9               movwf	((??_main+0)+0+2),f
   583  07B1  3003               movlw	3
   584  07B2  00F8               movwf	((??_main+0)+0+1),f
   585  07B3  30BA               	movlw	186
   586  07B4  00F7               movwf	((??_main+0)+0),f
   587  07B5                     u2407:
   588  07B5  0BF7               	decfsz	((??_main+0)+0),f
   589  07B6  2FB5               	goto	u2407
   590  07B7  0BF8               	decfsz	((??_main+0)+0+1),f
   591  07B8  2FB5               	goto	u2407
   592  07B9  0BF9               	decfsz	((??_main+0)+0+2),f
   593  07BA  2FB5               	goto	u2407
   594                           opt asmopt_on
   595                           
   596                           	line	38
   597                           	
   598  07BB                     l2105:	
   599                           ;code.c: 38: Lcd8_Shift_Right();
   600  07BB  120A  118A  263A   	fcall	_Lcd8_Shift_Right
              120A  118A         
   601                           	line	35
   602                           	
   603  07C0                     l2107:	
   604  07C0  3001               	movlw	low(01h)
   605  07C1  07FA               	addwf	(main@i),f
   606  07C2  1803               	skipnc
   607  07C3  0AFB               	incf	(main@i+1),f
   608  07C4  3000               	movlw	high(01h)
   609  07C5  07FB               	addwf	(main@i+1),f
   610                           	
   611  07C6                     l2109:	
   612  07C6  087B               	movf	(main@i+1),w
   613  07C7  3A80               	xorlw	80h
   614  07C8  00FF               	movwf	btemp+1
   615  07C9  3080               	movlw	(high(0Fh))^80h
   616  07CA  027F               	subwf	btemp+1,w
   617  07CB  1D03               	skipz
   618  07CC  2FCF               	goto	u2385
   619  07CD  300F               	movlw	low(0Fh)
   620  07CE  027A               	subwf	(main@i),w
   621  07CF                     u2385:
   622                           
   623  07CF  1C03               	skipc
   624  07D0  2FD2               	goto	u2381
   625  07D1  2FD3               	goto	u2380
   626  07D2                     u2381:
   627  07D2  2FAF               	goto	l2103
   628  07D3                     u2380:
   629  07D3  2FD4               	goto	l2111
   630                           	
   631  07D4                     l781:	
   632                           	line	40
   633                           	
   634  07D4                     l2111:	
   635                           ;code.c: 39: }
   636                           ;code.c: 40: Lcd8_Clear();
   637  07D4  120A  118A  2633   	fcall	_Lcd8_Clear
              120A  118A         
   638                           	line	41
   639                           ;code.c: 41: Lcd8_Set_Cursor(2,1);
   640  07D9  01F4               	clrf	(?_Lcd8_Set_Cursor)
   641  07DA  1403               	bsf	status,0
   642  07DB  0DF4               	rlf	(?_Lcd8_Set_Cursor),f
   643  07DC  3002               	movlw	(02h)
   644  07DD  120A  118A  267C   	fcall	_Lcd8_Set_Cursor
              120A  118A         
   645                           	line	42
   646                           ;code.c: 42: Lcd8_Write_Char('e');
   647  07E2  3065               	movlw	(065h)
   648  07E3  120A  118A  2662   	fcall	_Lcd8_Write_Char
              120A  118A         
   649                           	line	43
   650                           ;code.c: 43: Lcd8_Write_Char('S');
   651  07E8  3053               	movlw	(053h)
   652  07E9  120A  118A  2662   	fcall	_Lcd8_Write_Char
              120A  118A         
   653                           	line	44
   654                           	
   655  07EE                     l2113:	
   656                           ;code.c: 44: _delay((unsigned long)((2000)*(8000000/4000.0)));
   657                           	opt asmopt_off
   658  07EE  3015               movlw  21
   659  07EF  00F9               movwf	((??_main+0)+0+2),f
   660  07F0  3037               movlw	55
   661  07F1  00F8               movwf	((??_main+0)+0+1),f
   662  07F2  30CA               	movlw	202
   663  07F3  00F7               movwf	((??_main+0)+0),f
   664  07F4                     u2417:
   665  07F4  0BF7               	decfsz	((??_main+0)+0),f
   666  07F5  2FF4               	goto	u2417
   667  07F6  0BF8               	decfsz	((??_main+0)+0+1),f
   668  07F7  2FF4               	goto	u2417
   669  07F8  0BF9               	decfsz	((??_main+0)+0+2),f
   670  07F9  2FF4               	goto	u2417
   671  07FA  2FFB               	nop2
   672                           opt asmopt_on
   673                           
   674  07FB  2F59               	goto	l2079
   675                           	line	45
   676                           	
   677  07FC                     l782:	
   678                           	line	26
   679  07FC  2F59               	goto	l2079
   680                           	
   681  07FD                     l783:	
   682                           	line	46
   683                           	
   684  07FD                     l784:	
   685                           	global	start
   686  07FD  120A  118A  2800   	ljmp	start
   687                           	opt stack 0
   688                           GLOBAL	__end_of_main
   689  0800                     	__end_of_main:
   690 ;; =============== function _main ends ============
   691                           
   692                           	signat	_main,88
   693                           	global	_Lcd8_Shift_Left
   694                           psect	text140,local,class=CODE,delta=2
   695                           global __ptext140
   696  0641                     __ptext140:
   697                           
   698 ;; *************** function _Lcd8_Shift_Left *****************
   699 ;; Defined at:
   700 ;;		line 118 in file "G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Microcontroller - Hi
        Tech C\8 Bit\lcd.h"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;		None               void
   707 ;; Registers used:
   708 ;;		wreg, status,2, status,0, pclath, cstack
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   714 ;;      Params:         0       0       0       0       0
   715 ;;      Locals:         0       0       0       0       0
   716 ;;      Temps:          0       0       0       0       0
   717 ;;      Totals:         0       0       0       0       0
   718 ;;Total ram usage:        0 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    2
   721 ;; This function calls:
   722 ;;		_Lcd8_Cmd
   723 ;; This function is called by:
   724 ;;		_main
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           psect	text140
   728                           	file	"G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Mic
                                 rocontroller - Hi Tech C\8 Bit\lcd.h"
   729                           	line	118
   730                           	global	__size_of_Lcd8_Shift_Left
   731  0007                     	__size_of_Lcd8_Shift_Left	equ	__end_of_Lcd8_Shift_Left-_Lcd8_Shift_Left
   732                           	
   733  0641                     _Lcd8_Shift_Left:	
   734                           	opt	stack 5
   735                           ; Regs used in _Lcd8_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
   736                           	line	119
   737                           	
   738  0641                     l2073:	
   739                           ;lcd.h: 119: Lcd8_Cmd(0x18);
   740  0641  3018               	movlw	(018h)
   741  0642  120A  118A  2648   	fcall	_Lcd8_Cmd
              120A  118A         
   742                           	line	120
   743                           	
   744  0647                     l733:	
   745  0647  0008               	return
   746                           	opt stack 0
   747                           GLOBAL	__end_of_Lcd8_Shift_Left
   748  0648                     	__end_of_Lcd8_Shift_Left:
   749 ;; =============== function _Lcd8_Shift_Left ends ============
   750                           
   751                           	signat	_Lcd8_Shift_Left,88
   752                           	global	_Lcd8_Shift_Right
   753                           psect	text141,local,class=CODE,delta=2
   754                           global __ptext141
   755  063A                     __ptext141:
   756                           
   757 ;; *************** function _Lcd8_Shift_Right *****************
   758 ;; Defined at:
   759 ;;		line 113 in file "G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Microcontroller - Hi
        Tech C\8 Bit\lcd.h"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;		None               void
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0, pclath, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   773 ;;      Params:         0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0
   776 ;;      Totals:         0       0       0       0       0
   777 ;;Total ram usage:        0 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    2
   780 ;; This function calls:
   781 ;;		_Lcd8_Cmd
   782 ;; This function is called by:
   783 ;;		_main
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           psect	text141
   787                           	file	"G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Mic
                                 rocontroller - Hi Tech C\8 Bit\lcd.h"
   788                           	line	113
   789                           	global	__size_of_Lcd8_Shift_Right
   790  0007                     	__size_of_Lcd8_Shift_Right	equ	__end_of_Lcd8_Shift_Right-_Lcd8_Shift_Right
   791                           	
   792  063A                     _Lcd8_Shift_Right:	
   793                           	opt	stack 5
   794                           ; Regs used in _Lcd8_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
   795                           	line	114
   796                           	
   797  063A                     l2071:	
   798                           ;lcd.h: 114: Lcd8_Cmd(0x1C);
   799  063A  301C               	movlw	(01Ch)
   800  063B  120A  118A  2648   	fcall	_Lcd8_Cmd
              120A  118A         
   801                           	line	115
   802                           	
   803  0640                     l730:	
   804  0640  0008               	return
   805                           	opt stack 0
   806                           GLOBAL	__end_of_Lcd8_Shift_Right
   807  0641                     	__end_of_Lcd8_Shift_Right:
   808 ;; =============== function _Lcd8_Shift_Right ends ============
   809                           
   810                           	signat	_Lcd8_Shift_Right,88
   811                           	global	_Lcd8_Write_String
   812                           psect	text142,local,class=CODE,delta=2
   813                           global __ptext142
   814  069B                     __ptext142:
   815                           
   816 ;; *************** function _Lcd8_Write_String *****************
   817 ;; Defined at:
   818 ;;		line 106 in file "G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Microcontroller - Hi
        Tech C\8 Bit\lcd.h"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  a               1    wreg     PTR unsigned char 
   821 ;;		 -> STR_1(28), 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  a               1    6[COMMON] PTR unsigned char 
   824 ;;		 -> STR_1(28), 
   825 ;;  i               2    4[COMMON] int 
   826 ;; Return value:  Size  Location     Type
   827 ;;		None               void
   828 ;; Registers used:
   829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   835 ;;      Params:         0       0       0       0       0
   836 ;;      Locals:         3       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0
   838 ;;      Totals:         3       0       0       0       0
   839 ;;Total ram usage:        3 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; Hardware stack levels required when called:    2
   842 ;; This function calls:
   843 ;;		_Lcd8_Write_Char
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           psect	text142
   849                           	file	"G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Mic
                                 rocontroller - Hi Tech C\8 Bit\lcd.h"
   850                           	line	106
   851                           	global	__size_of_Lcd8_Write_String
   852  0027                     	__size_of_Lcd8_Write_String	equ	__end_of_Lcd8_Write_String-_Lcd8_Write_String
   853                           	
   854  069B                     _Lcd8_Write_String:	
   855                           	opt	stack 5
   856                           ; Regs used in _Lcd8_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   857                           ;Lcd8_Write_String@a stored from wreg
   858                           	line	108
   859  069B  00F6               	movwf	(Lcd8_Write_String@a)
   860                           	
   861  069C                     l2063:	
   862                           ;lcd.h: 107: int i;
   863                           ;lcd.h: 108: for(i=0;a[i]!='\0';i++)
   864  069C  01F4               	clrf	(Lcd8_Write_String@i)
   865  069D  01F5               	clrf	(Lcd8_Write_String@i+1)
   866  069E  2EB3               	goto	l2069
   867                           	line	109
   868                           	
   869  069F                     l725:	
   870                           	
   871  069F                     l2065:	
   872                           ;lcd.h: 109: Lcd8_Write_Char(a[i]);
   873  069F  0874               	movf	(Lcd8_Write_String@i),w
   874  06A0  0776               	addwf	(Lcd8_Write_String@a),w
   875  06A1  0084               	movwf	fsr0
   876  06A2  120A  118A  2003   	fcall	stringdir
              120A  118A         
   877  06A7  120A  118A  2662   	fcall	_Lcd8_Write_Char
              120A  118A         
   878                           	line	108
   879                           	
   880  06AC                     l2067:	
   881  06AC  3001               	movlw	low(01h)
   882  06AD  07F4               	addwf	(Lcd8_Write_String@i),f
   883  06AE  1803               	skipnc
   884  06AF  0AF5               	incf	(Lcd8_Write_String@i+1),f
   885  06B0  3000               	movlw	high(01h)
   886  06B1  07F5               	addwf	(Lcd8_Write_String@i+1),f
   887  06B2  2EB3               	goto	l2069
   888                           	
   889  06B3                     l724:	
   890                           	
   891  06B3                     l2069:	
   892  06B3  0874               	movf	(Lcd8_Write_String@i),w
   893  06B4  0776               	addwf	(Lcd8_Write_String@a),w
   894  06B5  0084               	movwf	fsr0
   895  06B6  120A  118A  2003   	fcall	stringdir
              120A  118A         
   896  06BB  3800               	iorlw	0
   897  06BC  1D03               	skipz
   898  06BD  2EBF               	goto	u2341
   899  06BE  2EC0               	goto	u2340
   900  06BF                     u2341:
   901  06BF  2E9F               	goto	l2065
   902  06C0                     u2340:
   903  06C0  2EC1               	goto	l727
   904                           	
   905  06C1                     l726:	
   906                           	line	110
   907                           	
   908  06C1                     l727:	
   909  06C1  0008               	return
   910                           	opt stack 0
   911                           GLOBAL	__end_of_Lcd8_Write_String
   912  06C2                     	__end_of_Lcd8_Write_String:
   913 ;; =============== function _Lcd8_Write_String ends ============
   914                           
   915                           	signat	_Lcd8_Write_String,4216
   916                           	global	_Lcd8_Init
   917                           psect	text143,local,class=CODE,delta=2
   918                           global __ptext143
   919  0701                     __ptext143:
   920                           
   921 ;; *************** function _Lcd8_Init *****************
   922 ;; Defined at:
   923 ;;		line 79 in file "G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Microcontroller - Hi 
       Tech C\8 Bit\lcd.h"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;		None               void
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, pclath, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0
   939 ;;      Temps:          2       0       0       0       0
   940 ;;      Totals:         2       0       0       0       0
   941 ;;Total ram usage:        2 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    2
   944 ;; This function calls:
   945 ;;		_Lcd8_Port
   946 ;;		_Lcd8_Cmd
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           psect	text143
   952                           	file	"G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Mic
                                 rocontroller - Hi Tech C\8 Bit\lcd.h"
   953                           	line	79
   954                           	global	__size_of_Lcd8_Init
   955  004E                     	__size_of_Lcd8_Init	equ	__end_of_Lcd8_Init-_Lcd8_Init
   956                           	
   957  0701                     _Lcd8_Init:	
   958                           	opt	stack 5
   959                           ; Regs used in _Lcd8_Init: [wreg+status,2+status,0+pclath+cstack]
   960                           	line	80
   961                           	
   962  0701                     l2051:	
   963                           ;lcd.h: 80: Lcd8_Port(0x00);
   964  0701  3000               	movlw	(0)
   965  0702  120A  118A  26C2   	fcall	_Lcd8_Port
              120A  118A         
   966                           	line	81
   967                           	
   968  0707                     l2053:	
   969                           ;lcd.h: 81: RB6 = 0;
   970  0707  1283               	bcf	status, 5	;RP0=0, select bank0
   971  0708  1303               	bcf	status, 6	;RP1=0, select bank0
   972  0709  1306               	bcf	(54/8),(54)&7
   973                           	line	82
   974                           	
   975  070A                     l2055:	
   976                           ;lcd.h: 82: _delay((unsigned long)((25)*(8000000/4000.0)));
   977                           	opt asmopt_off
   978  070A  3041               movlw	65
   979  070B  00F5               movwf	((??_Lcd8_Init+0)+0+1),f
   980  070C  30EE               	movlw	238
   981  070D  00F4               movwf	((??_Lcd8_Init+0)+0),f
   982  070E                     u2427:
   983  070E  0BF4               	decfsz	((??_Lcd8_Init+0)+0),f
   984  070F  2F0E               	goto	u2427
   985  0710  0BF5               	decfsz	((??_Lcd8_Init+0)+0+1),f
   986  0711  2F0E               	goto	u2427
   987  0712  0064               	clrwdt
   988                           opt asmopt_on
   989                           
   990                           	line	84
   991                           	
   992  0713                     l2057:	
   993                           ;lcd.h: 84: Lcd8_Cmd(0x30);
   994  0713  3030               	movlw	(030h)
   995  0714  120A  118A  2648   	fcall	_Lcd8_Cmd
              120A  118A         
   996                           	line	85
   997                           ;lcd.h: 85: _delay((unsigned long)((5)*(8000000/4000.0)));
   998                           	opt asmopt_off
   999  0719  300D               movlw	13
  1000  071A  00F5               movwf	((??_Lcd8_Init+0)+0+1),f
  1001  071B  30FB               	movlw	251
  1002  071C  00F4               movwf	((??_Lcd8_Init+0)+0),f
  1003  071D                     u2437:
  1004  071D  0BF4               	decfsz	((??_Lcd8_Init+0)+0),f
  1005  071E  2F1D               	goto	u2437
  1006  071F  0BF5               	decfsz	((??_Lcd8_Init+0)+0+1),f
  1007  0720  2F1D               	goto	u2437
  1008  0721  2F22               	nop2
  1009                           opt asmopt_on
  1010                           
  1011                           	line	86
  1012                           	
  1013  0722                     l2059:	
  1014                           ;lcd.h: 86: Lcd8_Cmd(0x30);
  1015  0722  3030               	movlw	(030h)
  1016  0723  120A  118A  2648   	fcall	_Lcd8_Cmd
              120A  118A         
  1017                           	line	87
  1018                           	
  1019  0728                     l2061:	
  1020                           ;lcd.h: 87: _delay((unsigned long)((15)*(8000000/4000.0)));
  1021                           	opt asmopt_off
  1022  0728  3027               movlw	39
  1023  0729  00F5               movwf	((??_Lcd8_Init+0)+0+1),f
  1024  072A  30F5               	movlw	245
  1025  072B  00F4               movwf	((??_Lcd8_Init+0)+0),f
  1026  072C                     u2447:
  1027  072C  0BF4               	decfsz	((??_Lcd8_Init+0)+0),f
  1028  072D  2F2C               	goto	u2447
  1029  072E  0BF5               	decfsz	((??_Lcd8_Init+0)+0+1),f
  1030  072F  2F2C               	goto	u2447
  1031                           opt asmopt_on
  1032                           
  1033                           	line	88
  1034                           ;lcd.h: 88: Lcd8_Cmd(0x30);
  1035  0730  3030               	movlw	(030h)
  1036  0731  120A  118A  2648   	fcall	_Lcd8_Cmd
              120A  118A         
  1037                           	line	90
  1038                           ;lcd.h: 90: Lcd8_Cmd(0x38);
  1039  0736  3038               	movlw	(038h)
  1040  0737  120A  118A  2648   	fcall	_Lcd8_Cmd
              120A  118A         
  1041                           	line	91
  1042                           ;lcd.h: 91: Lcd8_Cmd(0x0C);
  1043  073C  300C               	movlw	(0Ch)
  1044  073D  120A  118A  2648   	fcall	_Lcd8_Cmd
              120A  118A         
  1045                           	line	92
  1046                           ;lcd.h: 92: Lcd8_Cmd(0x01);
  1047  0742  3001               	movlw	(01h)
  1048  0743  120A  118A  2648   	fcall	_Lcd8_Cmd
              120A  118A         
  1049                           	line	93
  1050                           ;lcd.h: 93: Lcd8_Cmd(0x06);
  1051  0748  3006               	movlw	(06h)
  1052  0749  120A  118A  2648   	fcall	_Lcd8_Cmd
              120A  118A         
  1053                           	line	94
  1054                           	
  1055  074E                     l718:	
  1056  074E  0008               	return
  1057                           	opt stack 0
  1058                           GLOBAL	__end_of_Lcd8_Init
  1059  074F                     	__end_of_Lcd8_Init:
  1060 ;; =============== function _Lcd8_Init ends ============
  1061                           
  1062                           	signat	_Lcd8_Init,88
  1063                           	global	_Lcd8_Set_Cursor
  1064                           psect	text144,local,class=CODE,delta=2
  1065                           global __ptext144
  1066  067C                     __ptext144:
  1067                           
  1068 ;; *************** function _Lcd8_Set_Cursor *****************
  1069 ;; Defined at:
  1070 ;;		line 71 in file "G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Microcontroller - Hi 
       Tech C\8 Bit\lcd.h"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  a               1    wreg     unsigned char 
  1073 ;;  b               1    4[COMMON] unsigned char 
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  a               1    5[COMMON] unsigned char 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;		None               void
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0, pclath, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1085 ;;      Params:         1       0       0       0       0
  1086 ;;      Locals:         1       0       0       0       0
  1087 ;;      Temps:          0       0       0       0       0
  1088 ;;      Totals:         2       0       0       0       0
  1089 ;;Total ram usage:        2 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; Hardware stack levels required when called:    2
  1092 ;; This function calls:
  1093 ;;		_Lcd8_Cmd
  1094 ;; This function is called by:
  1095 ;;		_main
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           psect	text144
  1099                           	file	"G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Mic
                                 rocontroller - Hi Tech C\8 Bit\lcd.h"
  1100                           	line	71
  1101                           	global	__size_of_Lcd8_Set_Cursor
  1102  001F                     	__size_of_Lcd8_Set_Cursor	equ	__end_of_Lcd8_Set_Cursor-_Lcd8_Set_Cursor
  1103                           	
  1104  067C                     _Lcd8_Set_Cursor:	
  1105                           	opt	stack 5
  1106                           ; Regs used in _Lcd8_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1107                           ;Lcd8_Set_Cursor@a stored from wreg
  1108  067C  00F5               	movwf	(Lcd8_Set_Cursor@a)
  1109                           	line	72
  1110                           	
  1111  067D                     l2043:	
  1112                           ;lcd.h: 72: if(a == 1)
  1113  067D  0875               	movf	(Lcd8_Set_Cursor@a),w
  1114  067E  3A01               	xorlw	01h
  1115  067F  1D03               	skipz
  1116  0680  2E82               	goto	u2321
  1117  0681  2E83               	goto	u2320
  1118  0682                     u2321:
  1119  0682  2E8B               	goto	l2047
  1120  0683                     u2320:
  1121                           	line	73
  1122                           	
  1123  0683                     l2045:	
  1124                           ;lcd.h: 73: Lcd8_Cmd(0x80 + b);
  1125  0683  0874               	movf	(Lcd8_Set_Cursor@b),w
  1126  0684  3E80               	addlw	080h
  1127  0685  120A  118A  2648   	fcall	_Lcd8_Cmd
              120A  118A         
  1128  068A  2E9A               	goto	l715
  1129                           	line	74
  1130                           	
  1131  068B                     l712:	
  1132                           	
  1133  068B                     l2047:	
  1134                           ;lcd.h: 74: else if(a == 2)
  1135  068B  0875               	movf	(Lcd8_Set_Cursor@a),w
  1136  068C  3A02               	xorlw	02h
  1137  068D  1D03               	skipz
  1138  068E  2E90               	goto	u2331
  1139  068F  2E91               	goto	u2330
  1140  0690                     u2331:
  1141  0690  2E9A               	goto	l715
  1142  0691                     u2330:
  1143                           	line	75
  1144                           	
  1145  0691                     l2049:	
  1146                           ;lcd.h: 75: Lcd8_Cmd(0xC0 + b);
  1147  0691  0874               	movf	(Lcd8_Set_Cursor@b),w
  1148  0692  3EC0               	addlw	0C0h
  1149  0693  120A  118A  2648   	fcall	_Lcd8_Cmd
              120A  118A         
  1150  0698  2E9A               	goto	l715
  1151                           	
  1152  0699                     l714:	
  1153  0699  2E9A               	goto	l715
  1154                           	line	76
  1155                           	
  1156  069A                     l713:	
  1157                           	
  1158  069A                     l715:	
  1159  069A  0008               	return
  1160                           	opt stack 0
  1161                           GLOBAL	__end_of_Lcd8_Set_Cursor
  1162  069B                     	__end_of_Lcd8_Set_Cursor:
  1163 ;; =============== function _Lcd8_Set_Cursor ends ============
  1164                           
  1165                           	signat	_Lcd8_Set_Cursor,8312
  1166                           	global	_Lcd8_Clear
  1167                           psect	text145,local,class=CODE,delta=2
  1168                           global __ptext145
  1169  0633                     __ptext145:
  1170                           
  1171 ;; *************** function _Lcd8_Clear *****************
  1172 ;; Defined at:
  1173 ;;		line 66 in file "G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Microcontroller - Hi 
       Tech C\8 Bit\lcd.h"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  2  708[COMMON] int 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0, pclath, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1187 ;;      Params:         0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0
  1190 ;;      Totals:         0       0       0       0       0
  1191 ;;Total ram usage:        0 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    2
  1194 ;; This function calls:
  1195 ;;		_Lcd8_Cmd
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           psect	text145
  1201                           	file	"G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Mic
                                 rocontroller - Hi Tech C\8 Bit\lcd.h"
  1202                           	line	66
  1203                           	global	__size_of_Lcd8_Clear
  1204  0007                     	__size_of_Lcd8_Clear	equ	__end_of_Lcd8_Clear-_Lcd8_Clear
  1205                           	
  1206  0633                     _Lcd8_Clear:	
  1207                           	opt	stack 5
  1208                           ; Regs used in _Lcd8_Clear: [wreg+status,2+status,0+pclath+cstack]
  1209                           	line	67
  1210                           	
  1211  0633                     l2041:	
  1212                           ;lcd.h: 67: Lcd8_Cmd(1);
  1213  0633  3001               	movlw	(01h)
  1214  0634  120A  118A  2648   	fcall	_Lcd8_Cmd
              120A  118A         
  1215                           	line	68
  1216                           	
  1217  0639                     l709:	
  1218  0639  0008               	return
  1219                           	opt stack 0
  1220                           GLOBAL	__end_of_Lcd8_Clear
  1221  063A                     	__end_of_Lcd8_Clear:
  1222 ;; =============== function _Lcd8_Clear ends ============
  1223                           
  1224                           	signat	_Lcd8_Clear,90
  1225                           	global	_Lcd8_Write_Char
  1226                           psect	text146,local,class=CODE,delta=2
  1227                           global __ptext146
  1228  0662                     __ptext146:
  1229                           
  1230 ;; *************** function _Lcd8_Write_Char *****************
  1231 ;; Defined at:
  1232 ;;		line 97 in file "G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Microcontroller - Hi 
       Tech C\8 Bit\lcd.h"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  a               1    wreg     unsigned char 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;  a               1    3[COMMON] unsigned char 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;		None               void
  1239 ;; Registers used:
  1240 ;;		wreg, status,2, status,0, pclath, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1246 ;;      Params:         0       0       0       0       0
  1247 ;;      Locals:         1       0       0       0       0
  1248 ;;      Temps:          2       0       0       0       0
  1249 ;;      Totals:         3       0       0       0       0
  1250 ;;Total ram usage:        3 bytes
  1251 ;; Hardware stack levels used:    1
  1252 ;; Hardware stack levels required when called:    1
  1253 ;; This function calls:
  1254 ;;		_Lcd8_Port
  1255 ;; This function is called by:
  1256 ;;		_Lcd8_Write_String
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           psect	text146
  1261                           	file	"G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Mic
                                 rocontroller - Hi Tech C\8 Bit\lcd.h"
  1262                           	line	97
  1263                           	global	__size_of_Lcd8_Write_Char
  1264  001A                     	__size_of_Lcd8_Write_Char	equ	__end_of_Lcd8_Write_Char-_Lcd8_Write_Char
  1265                           	
  1266  0662                     _Lcd8_Write_Char:	
  1267                           	opt	stack 6
  1268                           ; Regs used in _Lcd8_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1269                           ;Lcd8_Write_Char@a stored from wreg
  1270  0662  00F3               	movwf	(Lcd8_Write_Char@a)
  1271                           	line	98
  1272                           	
  1273  0663                     l2031:	
  1274                           ;lcd.h: 98: RB6 = 1;
  1275  0663  1283               	bcf	status, 5	;RP0=0, select bank0
  1276  0664  1303               	bcf	status, 6	;RP1=0, select bank0
  1277  0665  1706               	bsf	(54/8),(54)&7
  1278                           	line	99
  1279                           	
  1280  0666                     l2033:	
  1281                           ;lcd.h: 99: Lcd8_Port(a);
  1282  0666  0873               	movf	(Lcd8_Write_Char@a),w
  1283  0667  120A  118A  26C2   	fcall	_Lcd8_Port
              120A  118A         
  1284                           	line	100
  1285                           	
  1286  066C                     l2035:	
  1287                           ;lcd.h: 100: RB7 = 1;
  1288  066C  1283               	bcf	status, 5	;RP0=0, select bank0
  1289  066D  1303               	bcf	status, 6	;RP1=0, select bank0
  1290  066E  1786               	bsf	(55/8),(55)&7
  1291                           	line	101
  1292                           	
  1293  066F                     l2037:	
  1294                           ;lcd.h: 101: _delay((unsigned long)((4)*(8000000/4000.0)));
  1295                           	opt asmopt_off
  1296  066F  300B               movlw	11
  1297  0670  00F2               movwf	((??_Lcd8_Write_Char+0)+0+1),f
  1298  0671  3062               	movlw	98
  1299  0672  00F1               movwf	((??_Lcd8_Write_Char+0)+0),f
  1300  0673                     u2457:
  1301  0673  0BF1               	decfsz	((??_Lcd8_Write_Char+0)+0),f
  1302  0674  2E73               	goto	u2457
  1303  0675  0BF2               	decfsz	((??_Lcd8_Write_Char+0)+0+1),f
  1304  0676  2E73               	goto	u2457
  1305  0677  0064               	clrwdt
  1306                           opt asmopt_on
  1307                           
  1308                           	line	102
  1309                           	
  1310  0678                     l2039:	
  1311                           ;lcd.h: 102: RB7 = 0;
  1312  0678  1283               	bcf	status, 5	;RP0=0, select bank0
  1313  0679  1303               	bcf	status, 6	;RP1=0, select bank0
  1314  067A  1386               	bcf	(55/8),(55)&7
  1315                           	line	103
  1316                           	
  1317  067B                     l721:	
  1318  067B  0008               	return
  1319                           	opt stack 0
  1320                           GLOBAL	__end_of_Lcd8_Write_Char
  1321  067C                     	__end_of_Lcd8_Write_Char:
  1322 ;; =============== function _Lcd8_Write_Char ends ============
  1323                           
  1324                           	signat	_Lcd8_Write_Char,4216
  1325                           	global	_Lcd8_Cmd
  1326                           psect	text147,local,class=CODE,delta=2
  1327                           global __ptext147
  1328  0648                     __ptext147:
  1329                           
  1330 ;; *************** function _Lcd8_Cmd *****************
  1331 ;; Defined at:
  1332 ;;		line 57 in file "G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Microcontroller - Hi 
       Tech C\8 Bit\lcd.h"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  a               1    wreg     unsigned char 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  a               1    3[COMMON] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;		None               void
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0, pclath, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1346 ;;      Params:         0       0       0       0       0
  1347 ;;      Locals:         1       0       0       0       0
  1348 ;;      Temps:          2       0       0       0       0
  1349 ;;      Totals:         3       0       0       0       0
  1350 ;;Total ram usage:        3 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    1
  1353 ;; This function calls:
  1354 ;;		_Lcd8_Port
  1355 ;; This function is called by:
  1356 ;;		_Lcd8_Clear
  1357 ;;		_Lcd8_Set_Cursor
  1358 ;;		_Lcd8_Init
  1359 ;;		_Lcd8_Shift_Right
  1360 ;;		_Lcd8_Shift_Left
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           psect	text147
  1364                           	file	"G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Mic
                                 rocontroller - Hi Tech C\8 Bit\lcd.h"
  1365                           	line	57
  1366                           	global	__size_of_Lcd8_Cmd
  1367  001A                     	__size_of_Lcd8_Cmd	equ	__end_of_Lcd8_Cmd-_Lcd8_Cmd
  1368                           	
  1369  0648                     _Lcd8_Cmd:	
  1370                           	opt	stack 5
  1371                           ; Regs used in _Lcd8_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1372                           ;Lcd8_Cmd@a stored from wreg
  1373  0648  00F3               	movwf	(Lcd8_Cmd@a)
  1374                           	line	58
  1375                           	
  1376  0649                     l2021:	
  1377                           ;lcd.h: 58: RB6 = 0;
  1378  0649  1283               	bcf	status, 5	;RP0=0, select bank0
  1379  064A  1303               	bcf	status, 6	;RP1=0, select bank0
  1380  064B  1306               	bcf	(54/8),(54)&7
  1381                           	line	59
  1382                           	
  1383  064C                     l2023:	
  1384                           ;lcd.h: 59: Lcd8_Port(a);
  1385  064C  0873               	movf	(Lcd8_Cmd@a),w
  1386  064D  120A  118A  26C2   	fcall	_Lcd8_Port
              120A  118A         
  1387                           	line	60
  1388                           	
  1389  0652                     l2025:	
  1390                           ;lcd.h: 60: RB7 = 1;
  1391  0652  1283               	bcf	status, 5	;RP0=0, select bank0
  1392  0653  1303               	bcf	status, 6	;RP1=0, select bank0
  1393  0654  1786               	bsf	(55/8),(55)&7
  1394                           	line	61
  1395                           	
  1396  0655                     l2027:	
  1397                           ;lcd.h: 61: _delay((unsigned long)((5)*(8000000/4000.0)));
  1398                           	opt asmopt_off
  1399  0655  300D               movlw	13
  1400  0656  00F2               movwf	((??_Lcd8_Cmd+0)+0+1),f
  1401  0657  30FB               	movlw	251
  1402  0658  00F1               movwf	((??_Lcd8_Cmd+0)+0),f
  1403  0659                     u2467:
  1404  0659  0BF1               	decfsz	((??_Lcd8_Cmd+0)+0),f
  1405  065A  2E59               	goto	u2467
  1406  065B  0BF2               	decfsz	((??_Lcd8_Cmd+0)+0+1),f
  1407  065C  2E59               	goto	u2467
  1408  065D  2E5E               	nop2
  1409                           opt asmopt_on
  1410                           
  1411                           	line	62
  1412                           	
  1413  065E                     l2029:	
  1414                           ;lcd.h: 62: RB7 = 0;
  1415  065E  1283               	bcf	status, 5	;RP0=0, select bank0
  1416  065F  1303               	bcf	status, 6	;RP1=0, select bank0
  1417  0660  1386               	bcf	(55/8),(55)&7
  1418                           	line	63
  1419                           	
  1420  0661                     l706:	
  1421  0661  0008               	return
  1422                           	opt stack 0
  1423                           GLOBAL	__end_of_Lcd8_Cmd
  1424  0662                     	__end_of_Lcd8_Cmd:
  1425 ;; =============== function _Lcd8_Cmd ends ============
  1426                           
  1427                           	signat	_Lcd8_Cmd,4216
  1428                           	global	_Lcd8_Port
  1429                           psect	text148,local,class=CODE,delta=2
  1430                           global __ptext148
  1431  06C2                     __ptext148:
  1432                           
  1433 ;; *************** function _Lcd8_Port *****************
  1434 ;; Defined at:
  1435 ;;		line 15 in file "G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Microcontroller - Hi 
       Tech C\8 Bit\lcd.h"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  a               1    wreg     unsigned char 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  a               1    0[COMMON] unsigned char 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;		None               void
  1442 ;; Registers used:
  1443 ;;		wreg
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1449 ;;      Params:         0       0       0       0       0
  1450 ;;      Locals:         1       0       0       0       0
  1451 ;;      Temps:          0       0       0       0       0
  1452 ;;      Totals:         1       0       0       0       0
  1453 ;;Total ram usage:        1 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_Lcd8_Cmd
  1459 ;;		_Lcd8_Init
  1460 ;;		_Lcd8_Write_Char
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           psect	text148
  1464                           	file	"G:\Electronics\Embeded\PIC Microcontroller\Hi-Tech C\Interfacing LCD with PIC Mic
                                 rocontroller - Hi Tech C\8 Bit\lcd.h"
  1465                           	line	15
  1466                           	global	__size_of_Lcd8_Port
  1467  003F                     	__size_of_Lcd8_Port	equ	__end_of_Lcd8_Port-_Lcd8_Port
  1468                           	
  1469  06C2                     _Lcd8_Port:	
  1470                           	opt	stack 6
  1471                           ; Regs used in _Lcd8_Port: [wreg]
  1472                           ;Lcd8_Port@a stored from wreg
  1473  06C2  00F0               	movwf	(Lcd8_Port@a)
  1474                           	line	16
  1475                           	
  1476  06C3                     l1157:	
  1477                           ;lcd.h: 16: if(a & 1)
  1478  06C3  1C70               	btfss	(Lcd8_Port@a),(0)&7
  1479  06C4  2EC6               	goto	u11
  1480  06C5  2EC7               	goto	u10
  1481  06C6                     u11:
  1482  06C6  2ECB               	goto	l687
  1483  06C7                     u10:
  1484                           	line	17
  1485                           	
  1486  06C7                     l1159:	
  1487                           ;lcd.h: 17: RC0 = 1;
  1488  06C7  1283               	bcf	status, 5	;RP0=0, select bank0
  1489  06C8  1303               	bcf	status, 6	;RP1=0, select bank0
  1490  06C9  1407               	bsf	(56/8),(56)&7
  1491  06CA  2ECE               	goto	l688
  1492                           	line	18
  1493                           	
  1494  06CB                     l687:	
  1495                           	line	19
  1496                           ;lcd.h: 18: else
  1497                           ;lcd.h: 19: RC0 = 0;
  1498  06CB  1283               	bcf	status, 5	;RP0=0, select bank0
  1499  06CC  1303               	bcf	status, 6	;RP1=0, select bank0
  1500  06CD  1007               	bcf	(56/8),(56)&7
  1501                           	
  1502  06CE                     l688:	
  1503                           	line	21
  1504                           ;lcd.h: 21: if(a & 2)
  1505  06CE  1CF0               	btfss	(Lcd8_Port@a),(1)&7
  1506  06CF  2ED1               	goto	u21
  1507  06D0  2ED2               	goto	u20
  1508  06D1                     u21:
  1509  06D1  2ED4               	goto	l689
  1510  06D2                     u20:
  1511                           	line	22
  1512                           	
  1513  06D2                     l1161:	
  1514                           ;lcd.h: 22: RC1 = 1;
  1515  06D2  1487               	bsf	(57/8),(57)&7
  1516  06D3  2ED5               	goto	l690
  1517                           	line	23
  1518                           	
  1519  06D4                     l689:	
  1520                           	line	24
  1521                           ;lcd.h: 23: else
  1522                           ;lcd.h: 24: RC1 = 0;
  1523  06D4  1087               	bcf	(57/8),(57)&7
  1524                           	
  1525  06D5                     l690:	
  1526                           	line	26
  1527                           ;lcd.h: 26: if(a & 4)
  1528  06D5  1D70               	btfss	(Lcd8_Port@a),(2)&7
  1529  06D6  2ED8               	goto	u31
  1530  06D7  2ED9               	goto	u30
  1531  06D8                     u31:
  1532  06D8  2EDB               	goto	l691
  1533  06D9                     u30:
  1534                           	line	27
  1535                           	
  1536  06D9                     l1163:	
  1537                           ;lcd.h: 27: RC2 = 1;
  1538  06D9  1507               	bsf	(58/8),(58)&7
  1539  06DA  2EDC               	goto	l692
  1540                           	line	28
  1541                           	
  1542  06DB                     l691:	
  1543                           	line	29
  1544                           ;lcd.h: 28: else
  1545                           ;lcd.h: 29: RC2 = 0;
  1546  06DB  1107               	bcf	(58/8),(58)&7
  1547                           	
  1548  06DC                     l692:	
  1549                           	line	31
  1550                           ;lcd.h: 31: if(a & 8)
  1551  06DC  1DF0               	btfss	(Lcd8_Port@a),(3)&7
  1552  06DD  2EDF               	goto	u41
  1553  06DE  2EE0               	goto	u40
  1554  06DF                     u41:
  1555  06DF  2EE2               	goto	l693
  1556  06E0                     u40:
  1557                           	line	32
  1558                           	
  1559  06E0                     l1165:	
  1560                           ;lcd.h: 32: RC3 = 1;
  1561  06E0  1587               	bsf	(59/8),(59)&7
  1562  06E1  2EE3               	goto	l694
  1563                           	line	33
  1564                           	
  1565  06E2                     l693:	
  1566                           	line	34
  1567                           ;lcd.h: 33: else
  1568                           ;lcd.h: 34: RC3 = 0;
  1569  06E2  1187               	bcf	(59/8),(59)&7
  1570                           	
  1571  06E3                     l694:	
  1572                           	line	36
  1573                           ;lcd.h: 36: if(a & 16)
  1574  06E3  1E70               	btfss	(Lcd8_Port@a),(4)&7
  1575  06E4  2EE6               	goto	u51
  1576  06E5  2EE7               	goto	u50
  1577  06E6                     u51:
  1578  06E6  2EE9               	goto	l695
  1579  06E7                     u50:
  1580                           	line	37
  1581                           	
  1582  06E7                     l1167:	
  1583                           ;lcd.h: 37: RC4 = 1;
  1584  06E7  1607               	bsf	(60/8),(60)&7
  1585  06E8  2EEA               	goto	l696
  1586                           	line	38
  1587                           	
  1588  06E9                     l695:	
  1589                           	line	39
  1590                           ;lcd.h: 38: else
  1591                           ;lcd.h: 39: RC4 = 0;
  1592  06E9  1207               	bcf	(60/8),(60)&7
  1593                           	
  1594  06EA                     l696:	
  1595                           	line	41
  1596                           ;lcd.h: 41: if(a & 32)
  1597  06EA  1EF0               	btfss	(Lcd8_Port@a),(5)&7
  1598  06EB  2EED               	goto	u61
  1599  06EC  2EEE               	goto	u60
  1600  06ED                     u61:
  1601  06ED  2EF0               	goto	l697
  1602  06EE                     u60:
  1603                           	line	42
  1604                           	
  1605  06EE                     l1169:	
  1606                           ;lcd.h: 42: RC5 = 1;
  1607  06EE  1687               	bsf	(61/8),(61)&7
  1608  06EF  2EF1               	goto	l698
  1609                           	line	43
  1610                           	
  1611  06F0                     l697:	
  1612                           	line	44
  1613                           ;lcd.h: 43: else
  1614                           ;lcd.h: 44: RC5 = 0;
  1615  06F0  1287               	bcf	(61/8),(61)&7
  1616                           	
  1617  06F1                     l698:	
  1618                           	line	46
  1619                           ;lcd.h: 46: if(a & 64)
  1620  06F1  1F70               	btfss	(Lcd8_Port@a),(6)&7
  1621  06F2  2EF4               	goto	u71
  1622  06F3  2EF5               	goto	u70
  1623  06F4                     u71:
  1624  06F4  2EF7               	goto	l699
  1625  06F5                     u70:
  1626                           	line	47
  1627                           	
  1628  06F5                     l1171:	
  1629                           ;lcd.h: 47: RC6 = 1;
  1630  06F5  1707               	bsf	(62/8),(62)&7
  1631  06F6  2EF8               	goto	l700
  1632                           	line	48
  1633                           	
  1634  06F7                     l699:	
  1635                           	line	49
  1636                           ;lcd.h: 48: else
  1637                           ;lcd.h: 49: RC6 = 0;
  1638  06F7  1307               	bcf	(62/8),(62)&7
  1639                           	
  1640  06F8                     l700:	
  1641                           	line	51
  1642                           ;lcd.h: 51: if(a & 128)
  1643  06F8  1FF0               	btfss	(Lcd8_Port@a),(7)&7
  1644  06F9  2EFB               	goto	u81
  1645  06FA  2EFC               	goto	u80
  1646  06FB                     u81:
  1647  06FB  2EFE               	goto	l701
  1648  06FC                     u80:
  1649                           	line	52
  1650                           	
  1651  06FC                     l1173:	
  1652                           ;lcd.h: 52: RC7 = 1;
  1653  06FC  1787               	bsf	(63/8),(63)&7
  1654  06FD  2F00               	goto	l703
  1655                           	line	53
  1656                           	
  1657  06FE                     l701:	
  1658                           	line	54
  1659                           ;lcd.h: 53: else
  1660                           ;lcd.h: 54: RC7 = 0;
  1661  06FE  1387               	bcf	(63/8),(63)&7
  1662  06FF  2F00               	goto	l703
  1663                           	
  1664  0700                     l702:	
  1665                           	line	55
  1666                           	
  1667  0700                     l703:	
  1668  0700  0008               	return
  1669                           	opt stack 0
  1670                           GLOBAL	__end_of_Lcd8_Port
  1671  0701                     	__end_of_Lcd8_Port:
  1672 ;; =============== function _Lcd8_Port ends ============
  1673                           
  1674                           	signat	_Lcd8_Port,4216
  1675                           psect	text149,local,class=CODE,delta=2
  1676                           global __ptext149
  1677  0000                     __ptext149:
  1678                           	global	btemp
  1679  007E                     	btemp set 07Eh
  1680                           
  1681                           	DABS	1,126,2	;btemp
  1682                           	global	wtemp0
  1683  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Thu Mar 20 14:37:01 2014

                         pc 0002                          u10 06C7                          u11 06C6  
                        u20 06D2                          u21 06D1                          u30 06D9  
                        u31 06D8                          u40 06E0                          u41 06DF  
                        u50 06E7                          u51 06E6                          u60 06EE  
                        u61 06ED                          u70 06F5                          u71 06F4  
                        u80 06FC                          u81 06FB                          fsr 0004  
                       l700 06F8                         l701 06FE                         l702 0700  
                       l703 0700                         l712 068B                         l721 067B  
                       l713 069A                         l706 0661                         l714 0699  
                       l730 0640                         l715 069A                         l724 06B3  
                       l709 0639                         l725 069F                         l733 0647  
                       l718 074E                         l726 06C1                         l727 06C1  
                       l690 06D5                         l691 06DB                         l692 06DC  
                       l780 07AF                         l693 06E2                         l781 07D4  
                       l694 06E3                         l782 07FC                         l695 06E9  
                       l687 06CB                         l783 07FD                         l696 06EA  
                       l688 06CE                         l784 07FD                         l697 06F0  
                       l689 06D4                         l777 0759                         l698 06F1  
                       l778 0779                         l699 06F7                         l779 079E  
                       _RC0 0038                         _RC1 0039                         _RC2 003A  
                       _RC3 003B                         _RC4 003C                         _RB6 0036  
                       _RC5 003D                         _RB7 0037                         _RC6 003E  
                       _RC7 003F                         fsr0 0004                  _Lcd8_Clear 0633  
                      l2021 0649                        l2101 07AE                        l2023 064C  
                      l2031 0663                        l2111 07D4                        l2103 07AF  
                      l1161 06D2                        l2025 0652                        l2033 0666  
                      l2041 0633                        l2113 07EE                        l2105 07BB  
                      l1171 06F5                        l1163 06D9                        l2027 0655  
                      l2035 066C                        l2043 067D                        l2051 0701  
                      l2107 07C0                        l1173 06FC                        l1165 06E0  
                      l1157 06C3                        l2029 065E                        l2037 066F  
                      l2045 0683                        l2061 0728                        l2053 0707  
                      l2109 07C6                        l1167 06E7                        l1159 06C7  
                      l2039 0678                        l2047 068B                        l2055 070A  
                      l2063 069C                        l2071 063A                        l1169 06EE  
                      l2049 0691                        l2057 0713                        l2065 069F  
                      l2073 0641                        l2081 0762                        l2059 0722  
                      l2067 06AC                        l2091 0785                        l2083 0768  
                      l2075 074F                        l2069 06B3                        l2093 078A  
                      l2085 076A                        l2077 0753                        l2095 0790  
                      l2087 0778                        l2079 0759                        l2097 079E  
                      l2089 0779                        l2099 07A0                        STR_1 0009  
                      u2320 0683                        u2321 0682                        u2330 0691  
                      u2331 0690                        u2340 06C0                        u2341 06BF  
                      u2350 0777                        u2407 07B5                        u2351 0776  
                      u2360 079D                        u2417 07F4                        u2361 079C  
                      u2370 07AD                        u2427 070E                        u2371 07AC  
                      u2355 0773                        u2380 07D3                        u2437 071D  
                      u2381 07D2                        u2365 0799                        u2447 072C  
                      u2375 07A9                        u2457 0673                        u2385 07CF  
                      u2467 0659                        u2397 077F                        _main 074F  
         ??_Lcd8_Set_Cursor 0075                        btemp 007E                        start 0000  
         ??_Lcd8_Shift_Left 0074                       ?_main 0070                       _TRISB 0086  
                     _TRISC 0087                       main@i 007A                       pclath 000A  
                     status 0003            __end_of_Lcd8_Cmd 0662                       wtemp0 007E  
         ?_Lcd8_Shift_Right 0070          ??_Lcd8_Shift_Right 0074                __end_of_main 0800  
        __size_of_Lcd8_Init 004E          __size_of_Lcd8_Port 003F           ??_Lcd8_Write_Char 0071  
                    ??_main 0077                 ?_Lcd8_Clear 0070           __end_of_Lcd8_Init 074F  
         __end_of_Lcd8_Port 0701              __pcstackCOMMON 0070         __size_of_Lcd8_Clear 0007  
                 ?_Lcd8_Cmd 0070             _Lcd8_Set_Cursor 067C             _Lcd8_Shift_Left 0641  
                __pmaintext 074F            Lcd8_Set_Cursor@a 0075            Lcd8_Set_Cursor@b 0074  
                ??_Lcd8_Cmd 0071             _Lcd8_Write_Char 0662     __end_of_Lcd8_Set_Cursor 069B  
 __size_of_Lcd8_Shift_Right 0007     __end_of_Lcd8_Shift_Left 0648                   Lcd8_Cmd@a 0073  
              ??_Lcd8_Clear 0074        end_of_initialization 062F          __end_of_Lcd8_Clear 063A  
   __end_of_Lcd8_Write_Char 067C                   _Lcd8_Init 0701                   _Lcd8_Port 06C2  
          ?_Lcd8_Set_Cursor 0074            ?_Lcd8_Shift_Left 0070         start_initialization 062F  
         __size_of_Lcd8_Cmd 001A           _Lcd8_Write_String 069B          ?_Lcd8_Write_String 0070  
                ?_Lcd8_Init 0070                  ?_Lcd8_Port 0070         ??_Lcd8_Write_String 0074  
          _Lcd8_Shift_Right 063A   __end_of_Lcd8_Write_String 06C2            ?_Lcd8_Write_Char 0070  
                 __ptext140 0641                   __ptext141 063A                   __ptext142 069B  
                 __ptext143 0701                   __ptext144 067C                   __ptext145 0633  
                 __ptext146 0662                   __ptext147 0648                   __ptext139 0000  
                 __ptext148 06C2                   __ptext149 0000                   __pstrings 0003  
               ??_Lcd8_Init 0074            Lcd8_Write_Char@a 0073                 ??_Lcd8_Port 0070  
               __stringbase 0008                    _Lcd8_Cmd 0648  __size_of_Lcd8_Write_String 0027  
  __end_of_Lcd8_Shift_Right 0641               __size_of_main 00B1                  Lcd8_Port@a 0070  
  __size_of_Lcd8_Set_Cursor 001F    __size_of_Lcd8_Shift_Left 0007                   stringcode 0003  
        Lcd8_Write_String@a 0076          Lcd8_Write_String@i 0074                    stringdir 0003  
                  stringtab 0003    __size_of_Lcd8_Write_Char 001A  
